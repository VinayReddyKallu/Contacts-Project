{"version":3,"sources":["serviceWorker.js","components/footer.jsx","components/login.jsx","components/register.jsx","components/contacts.jsx","index.js","components/custom.module.css"],"names":["Boolean","window","location","hostname","match","Footer","className","href","Component","Login","props","handleSubmit","e","preventDefault","console","log","state","username","password","length","alert","formData","FormData","append","axios","post","then","res","localStorage","setItem","catch","err","inputRef","React","createRef","Fragment","id","styles","side","buy","to","ref","this","name","type","placeholder","onChange","setState","target","value","onClick","PureComponent","Register","Confirmpassword","email","phone","emailError","passwordError","confirmpasswordError","usernameError","phoneError","current","focus","includes","validRegister","style","color","fontSize","Contacts","responseCallback","response","contacts","map","contact","insertToDb","title","isclicked","get","params","data","handleInput","handleLog","removeItem","loggedOut","loggedIn","getItem","buy2","behavior","direction","border","width","buy1","paddingLeft","clientId","buttonText","onSuccess","onFailure","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.d341d780.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nclass Footer extends Component {\n    render() { \n        return ( \n            <div>\n                <footer className=\"container py-5\">\n                    <div className=\"row\">\n                        <div className=\"col-6 col-md\">\n                            <p><strong>About us</strong></p>\n                             <p className=\"text-muted\">This  application  displays you the contact details of all the \n                                 users who are using this application.Thanks for using our application.\n                                 Hope you have liked our application.Please feel free to contact us for any further help!</p>   \n        \n\n                        </div>\n                        <div className=\"col-6 col-md\">\n                            <address>\n                                <ul className=\"list-unstyled text-small\">\n                                    <li><strong>Corporate Office</strong></li>\n                                    <li className=\"text-muted\">17/1/382/B/97</li>\n                                    <li className=\"text-muted\">Champapet, Hyderabad - 500079</li>\n                                    <li className=\"text-muted\">Telangana, India</li>\n                                    <li className=\"text-muted\">Phone: +91 800 83 17 399</li>\n                                </ul>\n                            </address>\n\n                        </div>\n\n                    </div>\n                    <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n                        <a href=\"mailto:vinayreddykallu@gmail.com\"> EMAIL US</a>\n                    </div>\n                </footer>\n\n\n            </div>\n\n\n\n\n\n\n         );\n    }\n}\n \nexport default Footer;","import React, { PureComponent } from 'react';\nimport styles from \"./custom.module.css\" ;\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Footer from './footer' ;\nclass Login extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef()\n        this.state = {\n            username: '',\n            password: '',\n\n        }\n    }\n\n    \n    \n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state.username);\n        console.log(this.state.password);\n        if(this.state.username.length===0)\n            alert(\"Username should not be Empty!\");\n        if(this.state.password.length===0)\n            alert(\"password should not be Empty!\");\n        \n        let formData = new FormData();\n        formData.append(\"username\",this.state.username);\n        formData.append(\"password\",this.state.password);\n        const url=\"https://lit-beyond-94989.herokuapp.com/login\";\n        axios.post(url,formData)\n        .then(res=> \n            {\n                window.location= \"/contacts\"\n                localStorage.setItem(\"token\",\"hvhsvvaxbcdhb\")\n            }\n        )\n        .catch(err=>  alert(\"invalid credentials\")\n        );\n        \n\n    }\n     \n    \n    render() { \n        return (\n            \n            <React.Fragment>\n                <div className=\"container-fluid\">\n                    <div className=\"jumbotron\" id={styles.side}>\n                        <h1 className=\"text-center font-weight-light\">CONTACTS</h1>\n                        <Link className={styles.buy}to='/register'><button  className=\"btn btn-primary\" >SignUp</button></Link>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <form >\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                User Name:\n                                <input className=\"form-control\" id=\"username\" ref={this.inputRef} name=\"username\" type=\"text\" placeholder=\"username\"\n                                onChange={e => this.setState({ username: e.target.value })}/>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                Password:\n                                <input className=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"password\"\n                                onChange={e => this.setState({ password: e.target.value })}/>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                    <input type=\"submit\" onClick={this.handleSubmit} className=\"btn btn-primary\" value=\"login\"/>\n                                </div>\n                            </div>\n                        </div>\n                       \n                    </form>\n                </div>\n                 \n                <Footer/>\n\n               \n            </React.Fragment>  \n           \n        );\n    }\n}\n \nexport default Login;","import React, { Component } from 'react';\nimport styles from \"./custom.module.css\" ;\nimport Footer from './footer' ;\nimport axios from 'axios';\nclass Register extends Component {\n\n    constructor(props){\n        super(props)\n        this.inputRef = React.createRef()\n        this.state = {\n            username: '',\n            password: '',\n            Confirmpassword: '',\n            email: '',\n            phone: '',\n            emailError:'' ,\n            passwordError:'',  \n            confirmpasswordError:'',\n            usernameError:'',\n            phoneError:''\n    \n        }\n\n    }\n\n    componentDidMount(){\n        this.inputRef.current.focus();\n    }\n    \n    validRegister(){\n        if(!this.state.email.includes(\"@\")){\n            this.setState({emailError:\"Invalid email address\"})\n            return false;   \n        }\n        if(this.state.password.length <= 5){\n            this.setState({passwordError:\"Password should be atleast 6 characters!\"})\n            return false;   \n        }\n        if(this.state.password!==this.state.Confirmpassword){\n            this.setState({confirmpasswordError:\"Password and Confirm password doest not match\"})\n            return false;   \n        }\n        if(this.state.phone.length!==10){\n            this.setState({phoneError:\"Phone number should be 10 digits\"})\n            return false;   \n        }\n        return true;\n    }\n    handleSubmit(){\n        console.log(\"going\");\n        if(this.validRegister()){\n            console.log(\"validated\");\n            let formData = new FormData();\n            formData.append(\"username\",this.state.username);\n            formData.append(\"password\",this.state.password);\n            formData.append(\"Confirmpassword\",this.state.Confirmpassword);\n            formData.append(\"email\",this.state.email);\n            formData.append(\"phone\",this.state.phone);\n            const url=\"https://lit-beyond-94989.herokuapp.com/register\";\n            axios.post(url,formData)\n            .then(res=> {\n                window.location= \"/contacts\"\n                console.log(\"going\")\n                localStorage.setItem(\"token\",\"hvhsvvaxbcdhb\")\n            }\n            )\n            .catch(err=>{\n                window.location= \"/register\"\n                console.log(\"not going\")\n            } \n           );\n        }\n\n\n    }\n     \n     render() { \n         return (  \n            <React.Fragment>\n                <div className=\"container-fluid\">\n                    <div className=\"jumbotron\" id={styles.side}>\n                        <h1 className=\"text-center font-weight-light\">CONTACTS</h1>\n                    </div>\n                </div>\n                <div className=\"container\">\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                User Name:\n                                <input className=\"form-control\" id=\"username\" name=\"username\"  ref={this.inputRef} type=\"text\" placeholder=\"username\"\n                                onChange={e => this.setState({ username: e.target.value })} />\n                                <p style={{color:\"red\",fontSize:\"16px\"}}>{this.state.usernameError}</p>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                Password:\n                                <input className=\"form-control\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"password\"\n                                 onChange={e => this.setState({ password: e.target.value })}/>\n                                  <p style={{color:\"red\",fontSize:\"16px\"}}>{this.state.passwordError}</p>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                Confirm Password:\n                                <input className=\"form-control\" id=\"Confirmpassword\" name=\"Confirmpassword\" type=\"password\" placeholder=\"password\"\n                                 onChange={e => this.setState({ Confirmpassword: e.target.value })}/>\n                                  <p style={{color:\"red\",fontSize:\"16px\"}}>{this.state.confirmpasswordError}</p>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                EMAIL:\n                                <input className=\"form-control\" id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\"\n                                 onChange={e => this.setState({ email: e.target.value })}/>\n                                 <p style={{color:\"red\",fontSize:\"16px\"}}>{this.state.emailError}</p>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                PHONE:\n                                <input className=\"form-control\" id=\"phone\" name=\"phone\" type=\"tel\" placeholder=\"phone\"\n                                 onChange={e => this.setState({ phone: e.target.value })}/>\n                                  <p style={{color:\"red\",fontSize:\"16px\"}}>{this.state.phoneError}</p>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-xs-3\">\n                                    <input type=\"submit\" onClick={()=>{this.handleSubmit()}} className=\"btn btn-primary\" value=\"CREATE\"/>\n                                </div>\n                            </div>\n                        </div>\n                       \n                    \n                </div>\n                \n                <Footer/>\n\n            </React.Fragment>  \n           \n         );\n     }\n }\n  \n export default Register;\n \n","import React, { Component } from 'react';\nimport styles from \"./custom.module.css\" ;\nimport GoogleContacts from 'react-google-contacts';\nimport {Redirect} from 'react-router-dom'\nimport axios from 'axios';\nimport Footer from './footer';\nclass Contacts extends Component {\n    constructor(props){\n        super(props)\n        const token = localStorage.getItem(\"token\")\n        let loggedIn = true\n        if(token === null){\n            loggedIn = false\n        }\n        let loggedOut=false;\n        this.state = {\n            isclicked : false,\n            username: '',\n            contacts: [],\n            loggedIn,\n            loggedOut\n        }\n\n    }\n   \n    insertToDb(name,email){\n        let formData = new FormData();\n        formData.append(\"username\",name);\n        formData.append(\"email\",email);\n        const url=\"https://lit-beyond-94989.herokuapp.com/insert\";\n        axios.post(url,formData)\n        .then(res=> console.log(res.data))\n        .catch(err=> console.log(err));\n    }\n    responseCallback = (response) => {\n        this.setState({ contacts: response })\n        this.state.contacts.map((contact) => (\n        this.insertToDb(contact.title,contact.email)\n\n        \n        ))\n    }\n\n    handleSubmit = e => {\n        this.setState({isclicked: true});\n        e.preventDefault();\n        console.log(this.state.username.length);\n        if(this.state.username.length!==0){\n            const url = \"https://lit-beyond-94989.herokuapp.com/searchContact\";\n            axios.get(url,{\n                params: {\n                username: this.state.username\n                }\n            }).then(response => response.data)\n            .then((data) => {\n                this.setState({ contacts: data })\n                console.log(this.state.contacts)\n                })\n        }\n        else{\n            const url = \"https://lit-beyond-94989.herokuapp.com/getAllContacts\";\n            axios.get(url,{\n            }).then(response => response.data)\n            .then((data) => {\n                this.setState({ contacts: data })\n                console.log(this.state.contacts)\n                })\n        }\n    }\n\n    handleInput = e =>{\n        this.setState({isclicked: true});\n        const url = \"https://lit-beyond-94989.herokuapp.com/searchContact\";\n            axios.get(url,{\n                params: {\n                username: e.target.value\n                }\n            }).then(response => response.data)\n            .then((data) => {\n                this.setState({ contacts: data })\n                console.log(this.state.contacts)\n                })\n        \n    }\n\n    handleLog = e =>{\n        localStorage.removeItem(\"token\")\n        this.setState({loggedOut : true})\n        \n    }\n\n    render() { \n        \n        if(this.state.loggedIn === false ||this.state.loggedOut === true){\n            return <Redirect to=\"/\" />\n        }\n\n        if(!this.state.isclicked ){\n            return ( \n                <React.Fragment>\n                    <div className=\"container-fluid\">\n                        <div className=\"jumbotron\" id={styles.side}>\n                            <h1 className=\"text-center font-weight-light\">CONTACTS</h1>\n                            <br></br>\n                            <button id={styles.buy1} onClick={this.handleSubmit}  className=\"btn btn-outline-info\">View All Contacts</button>\n                            <button onClick={this.handleLog} id={styles.buy2} className=\"btn btn-primary\" >LogOut</button>\n                            <input type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" placeholder=\"Search for...\"\n                              onChange={e => this.setState({ username: e.target.value })} /><br></br>\n                            <button onClick={this.handleSubmit} className=\"btn btn-primary\" >Search</button>\n                        \n                            <br></br> \n                            <br></br>\n                            <h5><kbd><center>Click the Below button to  Import your contacts from Google</center> </kbd></h5>\n                            <span style={{paddingLeft: '500px'}}></span><GoogleContacts\n                            clientId=\"933016618909-hlge4jpkghovh7a64eoh50r0rv092jel.apps.googleusercontent.com\"\n                            buttonText=\"\"\n                            onSuccess={this.responseCallback}\n                            onFailure={this.responseCallback}\n                            />\n                           \n                          \n                            \n                        </div>\n                        <div>\n                            \n                            <h4><center><kbd>Select the letter to display contacts starting with it!</kbd></center></h4>\n                            <center><div className=\"keyboardRow\">\n                                <button value=\"a\" onClick={this.handleInput} className=\"btn btn-warning\">a</button>\n                                <button value=\"b\"  onClick={this.handleInput} className=\"btn btn-warning\">b</button>\n                                <button value=\"c\"  onClick={this.handleInput} className=\"btn btn-warning\">c</button>\n                                <button value=\"d\"  onClick={this.handleInput} className=\"btn btn-warning\">d</button>\n                                <button value=\"e\"  onClick={this.handleInput} className=\"btn btn-warning\">e</button>\n                                <button value=\"f\"  onClick={this.handleInput} className=\"btn btn-warning\">f</button>\n                                <button value=\"g\"  onClick={this.handleInput} className=\"btn btn-warning\">g</button>\n                                <button value=\"h\"  onClick={this.handleInput} className=\"btn btn-warning\">h</button>\n                                <button value=\"i\"  onClick={this.handleInput} className=\"btn btn-warning\">i</button>\n                                <button value=\"j\"  onClick={this.handleInput} className=\"btn btn-warning\">j</button>\n                                <button value=\"k\"  onClick={this.handleInput} className=\"btn btn-warning\">k</button>\n                                <button value=\"l\"  onClick={this.handleInput} className=\"btn btn-warning\">l</button>\n                                <button value=\"m\"  onClick={this.handleInput} className=\"btn btn-warning\">m</button>\n                                <button value=\"n\"  onClick={this.handleInput} className=\"btn btn-warning\">n</button>\n                                <button value=\"o\"  onClick={this.handleInput} className=\"btn btn-warning\">o</button>\n                                <button value=\"p\"  onClick={this.handleInput} className=\"btn btn-warning\">p</button>\n                                <button value=\"q\"  onClick={this.handleInput} className=\"btn btn-warning\">q</button>\n                                <button value=\"r\"  onClick={this.handleInput} className=\"btn btn-warning\">r</button>\n                                <button value=\"s\"  onClick={this.handleInput}className=\"btn btn-warning\">s</button>\n                                <button value=\"t\"  onClick={this.handleInput} className=\"btn btn-warning\">t</button>\n                                <button value=\"u\"  onClick={this.handleInput} className=\"btn btn-warning\">u</button>\n                                <button value=\"v\"  onClick={this.handleInput} className=\"btn btn-warning\">v</button>\n                                <button value=\"w\"  onClick={this.handleInput} className=\"btn btn-warning\">w</button>\n                                <button value=\"x\"  onClick={this.handleInput} className=\"btn btn-warning\">x</button>\n                                <button value=\"y\"  onClick={this.handleInput} className=\"btn btn-warning\">y</button>\n                                <button value=\"z\"  onClick={this.handleInput} className=\"btn btn-warning\">z</button> \n                                \n                            </div></center>\n                        </div>\n                    </div>\n                    <Footer/>\n                </React.Fragment>\n            );\n\n        }\n        \n        else{\n            return ( \n                <React.Fragment>\n                    <div className=\"container-fluid\">\n                        <div className=\"jumbotron\" id={styles.side}>\n                            <h1 className=\"text-center font-weight-light\">CONTACTS</h1>\n                            <button onClick={this.handleLog} id={styles.buy2} className=\"btn btn-primary\" >LogOut</button>\n                            <br></br><marquee behavior=\"scroll\" direction=\"left\"><h2>Here are your contacts!</h2></marquee>\n\n                        </div>\n                    </div>\n                    <div className=\"container-fluid\">\n                        <table border='1' width='100%' >\n                        <thead>\n                                <tr>\n                                    <th>UserName</th>\n                                    <th>Email</th>\n                                    <th>Phone</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.contacts.map((contact) => (\n                                    \n                                <tr>\n                                    <td>{ contact.username }</td>\n                                    <td >{ contact.email }</td>\n                                    <td >{ contact.phone }</td>\n\n                                </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Footer/>\n                </React.Fragment>\n            );\n        }\n    }\n}\n \nexport default Contacts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css' ;\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter,Route} from 'react-router-dom';\nimport Login from './components/login' ;\nimport Register from './components/register' ;\nimport Contacts from './components/contacts';\n\n\nReactDOM.render(\n  <BrowserRouter>\n   <div>\n     <Route exact={true} path='/' component={Login} ></Route>\n     <Route path='/register' component={Register}/>\n     <Route path='/contacts' component={Contacts}/>\n   </div>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side\":\"custom_side__1F7RJ\",\"buy\":\"custom_buy__3zXgD\",\"buy1\":\"custom_buy1__1dlvC\",\"btn-search\":\"custom_btn-search__1nZ0S\",\"yellam\":\"custom_yellam__3DNUU\",\"bigblue\":\"custom_bigblue__2A9eQ\",\"p\":\"custom_p__1XtMq\",\"buy2\":\"custom_buy2__1Lx3w\"};"],"sourceRoot":""}